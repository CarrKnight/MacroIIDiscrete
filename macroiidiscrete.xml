<?xml version="1.0" encoding="UTF-8"?>
<project name="macroiidiscrete" default="all">
  
  
  <property file="macroiidiscrete.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.ch.qos.logback:logback-classic:1.0.13.classpath">
    <pathelement location="${basedir}/lib/logging/logback-classic-1.0.13.jar"/>
    <pathelement location="${basedir}/lib/logging/logback-core-1.0.13.jar"/>
    <pathelement location="${basedir}/lib/logging/slf4j-api-1.7.5.jar"/>
  </path>
  
  <path id="library.com.google.guava:guava:16.0.1.classpath">
    <pathelement location="${basedir}/lib/guava/guava-16.0.1.jar"/>
  </path>
  
  <path id="library.commons-math3-3.2-javadoc.classpath">
    <pathelement location="${basedir}/lib/commons-math/commons-math3-3.2.jar"/>
  </path>
  
  <path id="library.gov.nist.math:jama:1.0.3.classpath">
    <pathelement location="${basedir}/lib/jama/jama-1.0.3.jar"/>
  </path>
  
  <path id="library.jfree:jfreechart:1.0.13.classpath">
    <pathelement location="${basedir}/lib/jung/jcommon-1.0.16.jar"/>
    <pathelement location="${basedir}/lib/jung/jfreechart-1.0.13.jar"/>
  </path>
  
  <path id="library.junit:junit:4.11.classpath">
    <pathelement location="${basedir}/lib/powermock-junit4/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/powermock-junit4/junit-4.11.jar"/>
  </path>
  
  <path id="library.mason.16.classpath">
    <pathelement location="${basedir}/lib/mason/jar/mason.16.jar"/>
  </path>
  
  <path id="library.maven:_junit:junit:4.9.classpath">
    <pathelement location="${path.variable.maven_repository}/junit/junit/4.9/junit-4.9.jar"/>
  </path>
  
  <path id="library.maven:_org.hamcrest:hamcrest-core:1.1.classpath">
    <pathelement location="${path.variable.maven_repository}/org/hamcrest/hamcrest-core/1.1/hamcrest-core-1.1.jar"/>
  </path>
  
  <path id="library.maven:_org.javassist:javassist:3.17.1-ga.classpath">
    <pathelement location="${path.variable.maven_repository}/org/javassist/javassist/3.17.1-GA/javassist-3.17.1-GA.jar"/>
  </path>
  
  <path id="library.maven:_org.objenesis:objenesis:1.2.classpath">
    <pathelement location="${path.variable.maven_repository}/org/objenesis/objenesis/1.2/objenesis-1.2.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-core:1.5.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-core/1.5/powermock-core-1.5.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-module-junit4-common:1.5.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-module-junit4-common/1.5/powermock-module-junit4-common-1.5.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-module-junit4:1.5.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-module-junit4/1.5/powermock-module-junit4-1.5.jar"/>
  </path>
  
  <path id="library.maven:_org.powermock:powermock-reflect:1.5.classpath">
    <pathelement location="${path.variable.maven_repository}/org/powermock/powermock-reflect/1.5/powermock-reflect-1.5.jar"/>
  </path>
  
  <path id="library.net.sf.jung:jung-algorithms:2.0.1.classpath">
    <pathelement location="${basedir}/lib/jung/collections-generic-4.01.jar"/>
    <pathelement location="${basedir}/lib/jung/colt-1.2.0.jar"/>
    <pathelement location="${basedir}/lib/jung/concurrent-1.3.4.jar"/>
    <pathelement location="${basedir}/lib/jung/jung-algorithms-2.0.1.jar"/>
    <pathelement location="${basedir}/lib/jung/jung-api-2.0.1.jar"/>
  </path>
  
  <path id="library.net.sf.jung:jung-graph-impl:2.0.1.classpath">
    <pathelement location="${basedir}/lib/jung/collections-generic-4.01.jar"/>
    <pathelement location="${basedir}/lib/jung/jung-api-2.0.1.jar"/>
    <pathelement location="${basedir}/lib/jung/jung-graph-impl-2.0.1.jar"/>
  </path>
  
  <path id="library.net.sf.jung:jung-visualization:2.0.1.classpath">
    <pathelement location="${basedir}/lib/jung/collections-generic-4.01.jar"/>
    <pathelement location="${basedir}/lib/jung/colt-1.2.0.jar"/>
    <pathelement location="${basedir}/lib/jung/concurrent-1.3.4.jar"/>
    <pathelement location="${basedir}/lib/jung/jung-algorithms-2.0.1.jar"/>
    <pathelement location="${basedir}/lib/jung/jung-api-2.0.1.jar"/>
    <pathelement location="${basedir}/lib/jung/jung-visualization-2.0.1.jar"/>
  </path>
  
  <path id="library.net.sf.opencsv:opencsv:2.3.classpath">
    <pathelement location="${basedir}/lib/opencsv/opencsv-2.3.jar"/>
  </path>
  
  <path id="library.org.powermock:powermock-api-mockito:1.5.classpath">
    <pathelement location="${basedir}/lib/powermock-junit4/javassist-3.17.1-GA.jar"/>
    <pathelement location="${basedir}/lib/powermock-junit4/mockito-all-1.9.5.jar"/>
    <pathelement location="${basedir}/lib/powermock-junit4/objenesis-1.2.jar"/>
    <pathelement location="${basedir}/lib/powermock-junit4/powermock-api-mockito-1.5.jar"/>
    <pathelement location="${basedir}/lib/powermock-junit4/powermock-api-support-1.5.jar"/>
    <pathelement location="${basedir}/lib/powermock-junit4/powermock-core-1.5.jar"/>
    <pathelement location="${basedir}/lib/powermock-junit4/powermock-reflect-1.5.jar"/>
  </path>
  
  <path id="library.watchmaker-swing-0.7.1.classpath">
    <pathelement location="${basedir}/lib/watchmaker-framework-0.7.1/lib/google-collect-1.0.jar"/>
    <pathelement location="${basedir}/lib/watchmaker-framework-0.7.1/lib/jcommon-1.0.16.jar"/>
    <pathelement location="${basedir}/lib/watchmaker-framework-0.7.1/lib/jfreechart-1.0.13.jar"/>
    <pathelement location="${basedir}/lib/watchmaker-framework-0.7.1/lib/uncommons-maths-1.2.1.jar"/>
    <pathelement location="${basedir}/lib/watchmaker-framework-0.7.1/watchmaker-framework-0.7.1.jar"/>
    <pathelement location="${basedir}/lib/watchmaker-framework-0.7.1/watchmaker-swing-0.7.1.jar"/>
  </path>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_macroiidiscrete.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.macroiidiscrete, clean.artifact.oil_distribution" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.macroiidiscrete" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.oil_distribution" value="${basedir}/out/artifacts/Oil_Distribution"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="artifact.temp.output.MacroIIDiscrete" value="${artifacts.temp.dir}/MacroIIDiscrete.jar"/>
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${jdk.home.1.8}/lib/ant-javafx.jar"/>
  </target>
  
  <target name="clean.artifact.oil_distribution" description="clean Oil Distribution artifact output">
    <delete dir="${artifact.output.oil_distribution}"/>
  </target>
  
  <target name="artifact.oil_distribution" depends="init.artifacts, compile.module.macroiidiscrete" description="Build &#39;Oil Distribution&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <mkdir dir="${artifact.output.oil_distribution}"/>
    <copy todir="${artifact.temp.output.MacroIIDiscrete}">
      <fileset dir="${macroiidiscrete.output.dir}"/>
    </copy>
    <copy file="${basedir}/lib/logging/logback-classic-1.0.13.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/logback-classic-1.0.13.jar"/>
    <copy file="${basedir}/lib/logging/logback-core-1.0.13.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/logback-core-1.0.13.jar"/>
    <copy file="${basedir}/lib/logging/slf4j-api-1.7.5.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/slf4j-api-1.7.5.jar"/>
    <copy file="${basedir}/lib/guava/guava-16.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/guava-16.0.1.jar"/>
    <copy file="${basedir}/lib/commons-math/commons-math3-3.2.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/commons-math3-3.2.jar"/>
    <copy file="${basedir}/lib/jama/jama-1.0.3.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jama-1.0.3.jar"/>
    <copy file="${basedir}/lib/jung/jfreechart-1.0.13.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jfreechart-1.0.13.jar"/>
    <copy file="${basedir}/lib/jung/jcommon-1.0.16.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jcommon-1.0.16.jar"/>
    <copy file="${basedir}/lib/jung/jung-algorithms-2.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jung-algorithms-2.0.1.jar"/>
    <copy file="${basedir}/lib/jung/jung-api-2.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jung-api-2.0.1.jar"/>
    <copy file="${basedir}/lib/jung/collections-generic-4.01.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/collections-generic-4.01.jar"/>
    <copy file="${basedir}/lib/jung/colt-1.2.0.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/colt-1.2.0.jar"/>
    <copy file="${basedir}/lib/jung/concurrent-1.3.4.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/concurrent-1.3.4.jar"/>
    <copy file="${basedir}/lib/jung/jung-graph-impl-2.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jung-graph-impl-2.0.1.jar"/>
    <copy file="${basedir}/lib/jung/jung-api-2.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jung-api-2.0.1.jar"/>
    <copy file="${basedir}/lib/jung/collections-generic-4.01.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/collections-generic-4.01.jar"/>
    <copy file="${basedir}/lib/jung/jung-visualization-2.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jung-visualization-2.0.1.jar"/>
    <copy file="${basedir}/lib/jung/jung-api-2.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jung-api-2.0.1.jar"/>
    <copy file="${basedir}/lib/jung/collections-generic-4.01.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/collections-generic-4.01.jar"/>
    <copy file="${basedir}/lib/jung/jung-algorithms-2.0.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jung-algorithms-2.0.1.jar"/>
    <copy file="${basedir}/lib/jung/colt-1.2.0.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/colt-1.2.0.jar"/>
    <copy file="${basedir}/lib/jung/concurrent-1.3.4.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/concurrent-1.3.4.jar"/>
    <copy file="${basedir}/lib/opencsv/opencsv-2.3.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/opencsv-2.3.jar"/>
    <copy file="${basedir}/lib/watchmaker-framework-0.7.1/watchmaker-swing-0.7.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/watchmaker-swing-0.7.1.jar"/>
    <copy file="${basedir}/lib/watchmaker-framework-0.7.1/watchmaker-framework-0.7.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/watchmaker-framework-0.7.1.jar"/>
    <copy file="${basedir}/lib/watchmaker-framework-0.7.1/lib/google-collect-1.0.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/google-collect-1.0.jar"/>
    <copy file="${basedir}/lib/watchmaker-framework-0.7.1/lib/jcommon-1.0.16.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jcommon-1.0.16.jar"/>
    <copy file="${basedir}/lib/watchmaker-framework-0.7.1/lib/jfreechart-1.0.13.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/jfreechart-1.0.13.jar"/>
    <copy file="${basedir}/lib/watchmaker-framework-0.7.1/lib/uncommons-maths-1.2.1.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/uncommons-maths-1.2.1.jar"/>
    <copy file="${basedir}/lib/mason/jar/mason.16.jar" tofile="${artifact.temp.output.MacroIIDiscrete}/mason.16.jar"/>
    <mkdir dir="${artifact.temp.output.MacroIIDiscrete}/META-INF"/>
    <copy file="${basedir}/src/main/java/META-INF/MANIFEST.MF" tofile="${artifact.temp.output.MacroIIDiscrete}/META-INF/MANIFEST.MF"/>
    <fx:fileset id="all_but_MacroIIDiscrete" dir="${artifact.temp.output.MacroIIDiscrete}" includes="**/*.jar">
      <exclude name="MacroIIDiscrete.jar"/>
    </fx:fileset>
    <fx:fileset id="all_MacroIIDiscrete" dir="${artifact.temp.output.MacroIIDiscrete}" includes="**/*.jar"/>
    <fx:application id="MacroIIDiscrete_id" name="Oil Distribution" mainClass="model.gui.OilPumpApplication"/>
    <fx:jar destfile="${artifact.temp.output.MacroIIDiscrete}/MacroIIDiscrete.jar">
      <fx:application refid="MacroIIDiscrete_id"/>
      <fileset dir="${artifact.temp.output.MacroIIDiscrete}" excludes="**/*.jar"/>
      <fx:resources>
        <fx:fileset refid="all_but_MacroIIDiscrete"/>
      </fx:resources>
   </fx:jar>
    <fx:deploy width="854" height="480" updatemode="background" outdir="${artifact.temp.output.MacroIIDiscrete}/deploy" outfile="MacroIIDiscrete">
      <fx:permissions elevated="true"/>
      <fx:application refid="MacroIIDiscrete_id"/>
      <fx:info title="Oil Distribution Sample, Alpha 1" vendor="Ernesto Carrella"/>
      <fx:resources>
        <fx:fileset refid="all_MacroIIDiscrete"/>
      </fx:resources>
    </fx:deploy>
    <property name="artifact.sign.vendor.MacroIIDiscrete" value="CN=Ernesto Carrella"/>
    <property name="artifact.sign.alias.MacroIIDiscrete" value="carrknight"/>
    <property name="artifact.sign.keystore.MacroIIDiscrete" value="/home/carrknight/code/key/store"/>
    <property name="artifact.sign.storepass.MacroIIDiscrete" value="K0ai0tlg"/>
    <property name="artifact.sign.keypass.MacroIIDiscrete" value="K0ai0tlg"/>
    <signjar alias="${artifact.sign.alias.MacroIIDiscrete}" keystore="${artifact.sign.keystore.MacroIIDiscrete}" storepass="${artifact.sign.storepass.MacroIIDiscrete}" keypass="${artifact.sign.keypass.MacroIIDiscrete}">
      <fileset dir="${artifact.temp.output.MacroIIDiscrete}/deploy">
        <include name="*.jar"/>
      </fileset>
    </signjar>
    <copy todir="${artifact.output.oil_distribution}">
      <fileset dir="${artifact.temp.output.MacroIIDiscrete}/deploy"/>
    </copy>
    <delete includeemptydirs="true">
      <fileset dir="${artifact.temp.output.MacroIIDiscrete}"/>
    </delete>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.oil_distribution" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>